#!/bin/bash

[ "$(id -u)" -eq 0 ] || { echo 'Run this script as root'; exit 1; }

server_user=hlds
server_conf=/etc/hlds/cs16-server.conf
server_workdir="/home/$server_user/.steam"

_read_conf() {
	source "$server_conf"
}

_start_hlds() {
	su "$server_user" -c "cd $server_workdir/cs16 && ./hlds_run ${server_game:-} ${server_params:-} ${server_dll:-} > /dev/null 2>&1 &"
}

_kill_hlds() {
	su "$server_user" -c "pkill -SIGINT hlds_ > /dev/null 2>&1"
}

_update_hlds() {
	su "$server_user" -c "cd $server_workdir && ./steamcmd.sh +force_install_dir cs16 +login anonymous +app_update 90 validate +quit"
}

start_server() {
	pgrep hlds > /dev/null 2>&1 && echo 'Server is already running' && exit 1
	echo 'Starting server'
	_read_conf && _start_hlds
}

stop_server() {
	pgrep hlds > /dev/null 2>&1 || { echo 'Server is not running'; exit 1; }
	echo 'Stopping server'
	_kill_hlds
}

restart_server() {
	pgrep hlds > /dev/null 2>&1 && echo 'Restarting server' || echo 'Starting server'
	_kill_hlds
	_read_conf && _start_hlds
}

update_server() {
	pgrep hlds > /dev/null 2>&1 && echo 'Stop server first' && exit 1
	echo 'Updating server'
	_update_hlds
}

status_server() {
	if pgrep hlds > /dev/null 2>&1; then
		echo 'Server is running with the following args:'
		pgrep -a hlds_run | awk '{print substr($0, index($0, $3))}'
	else
		echo 'Server is not running'
	fi
}

print_help() { echo "Usage: $(basename "$0") [start | restart | stop | update | status]"; }

case $1 in
	start) start_server;;
	restart) restart_server;;
	stop) stop_server;;
	update) update_server;;
	status) status_server;;
	*) print_help;;
esac
