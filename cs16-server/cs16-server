#!/bin/bash

set -euo pipefail

if [[ "$(id -u)" -ne 0 ]]; then
    printf "%s must be run as root\n" "$(basename "$0")"
    exit 1
fi

server_user="hlds"
server_conf="/etc/hlds/cs16-server.conf"
server_workdir="/home/${server_user}/.steam"

_hlds_check() {
    if pgrep -u "${server_user}" steamcmd &> /dev/null; then
        printf "Server is being updated\n"
        printf "Wait for it to finish\n"
        exit 1
    fi
    pgrep -u "${server_user}" hlds_ &> /dev/null
}

_start_hlds() {
    source "${server_conf}"
    su "${server_user}" -c "cd ${server_workdir}/cs16 && ./hlds_run ${server_game:-} ${server_params:-} ${server_dll:-} &> /dev/null &"
}

_kill_hlds() {
    su "${server_user}" -c "pkill -u ${server_user} -SIGINT hlds_ &> /dev/null"
}

_update_hlds() {
    su "${server_user}" -c "cd ${server_workdir} && ./steamcmd.sh +force_install_dir cs16 +login anonymous +app_update 90 validate +quit"
}

start_server() {
    if _hlds_check; then
        printf "Server is already running\n"
        exit 1
    fi
    printf "Starting server\n"
    _start_hlds
}

stop_server() {
    if ! _hlds_check; then
        printf "Server is not running\n"
        exit 1
    fi
    printf "Stopping server\n"
    _kill_hlds
}

restart_server() {
    if _hlds_check; then
        printf "Restarting server\n"
        _kill_hlds
    else
        printf "Starting server\n"
    fi
    _start_hlds
}

update_server() {
    if _hlds_check; then
        printf "Stop server first\n"
        exit 1
    fi
    printf "Updating server\n"
    _update_hlds
}

status_server() {
    if _hlds_check; then
        printf "Server is running with the following args:\n"
        pgrep -a hlds_linux | awk '{ print substr($0, index($0, $2)) }'
    else
        printf "Server is not running\n"
    fi
}

print_help() {
    printf "Usage: %s [start | restart | stop | update | status]\n" "$(basename "$0")"
}

case "${1:-}" in
    "start")
        start_server
        ;;
    "restart")
        restart_server
        ;;
    "stop")
        stop_server
        ;;
    "update")
        update_server
        ;;
    "status")
        status_server
        ;;
    "")
        print_help
        ;;
    *)
        printf "Invalid option %s\n" "$1"
        print_help
        exit 1
        ;;
esac
