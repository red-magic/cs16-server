#!/bin/bash

# Copy this script to /home/hlds directory and run it as hlds user

set -euo pipefail

server_user="hlds"

if [[ "$(id -un)" != "${server_user}" ]]; then
    printf "You must run this script as %s user\n" "${server_user}"
    exit 1
fi

trap "printf \"\n\nInstallation aborted\n\n\"; exit 1" INT

arc="cs-1.6-mega-map-pack-v-2018.1.7z"

check_depends() {
    pkgs=("git" "7z" "curl")
    missing_pkgs=""

    for pkg in "${pkgs[@]}"; do
        [[ -x "$(command -v "${pkg}")" ]] || missing_pkgs="${missing_pkgs} ${pkg}"
    done

    if [[ -n "${missing_pkgs}" ]]; then
        printf "Install the following packages:%s\n" "${missing_pkgs}"
        exit 1
    fi
}

download_files() {
    mkdir -vp "/home/${server_user}/cs16-maps-and-graphs"
    cd "/home/${server_user}/cs16-maps-and-graphs" || exit 1

    printf "==> Downloading map pack, it is going to take some time\n"
    map_link="https://archive.org/download/${arc}/CS%201.6%20Mega%20Map%20Pack%20v2018.1.7z"

    if ! curl -fLO "${map_link}" -o "${arc}"; then
        printf "Failed to download map archive\n"
        exit 1
    fi

    git clone https://github.com/yapb/graph
}

copy_files() {
    7z x -o"/home/${server_user}/.steam/cs16" "${arc}"
    cp -v graph/graph/* "/home/${server_user}/.steam/cs16/cstrike/addons/yapb/data/graph"
}

cleanup() {
    rm -vf "${arc}"
    rm -vrf graph
}

case "$1" in
    "")
        check_depends
        download_files
        copy_files
        #cleanup
        printf "\nInstallation completed\n\n"
        ;;
esac
