#!/bin/bash

export server_user=hlds

if [ "$(id -u)" -ne 0 ]; then
	echo 'Run this script as root'
	echo 'Pass "remove" arg to uninstall'
	exit 1
fi

trap 'pkill -SIGINT steamcmd > /dev/null 2>&1; echo -en "\nInstallation aborted\n"; exit 1' INT

remove_server() {
	if pgrep -u hlds > /dev/null 2>&1; then
		echo 'hlds user has processes running'
		echo 'Stop them before uninstalling the server'
		exit 1
	fi
	userdel -r "$server_user"
	rm -vrf /etc/hlds
	rm -vf /usr/bin/cs16-server
	rm -vf /usr/share/man/man1/cs16-server.1.gz
	[ -x "$(command -v systemctl)" ] && rm -vf /usr/lib/systemd/system/cs16-server.service
}

check_depends() {
	lib32_warn() {
		echo 'Install 32-bit libstdc++'
		echo 'See README.md for details'
		exit 1
	}

	if [ -x "$(command -v pacman)" ] || [ -x "$(command -v apt)" ]; then
		[ ! -d /usr/lib32 ] && lib32_warn
		find /usr/lib32 -type f | grep -q libstdc++ || lib32_warn
	elif [ -x "$(command -v dnf)" ]; then
		find /usr/lib -type f | grep -q libstdc++ || lib32_warn
	else
		echo 'Unknown distro, make sure you have 32-bit libstdc++'
		echo 'Press Enter to continue'
		read -r
	fi

	pkgs=(tar xz gzip curl)

	for pkg in "${pkgs[@]}"; do
		[ -x "$(command -v "$pkg")" ] || missing_packages="$missing_packages $pkg"
	done

	[ -n "$missing_packages" ] && echo "Install the following packages:$missing_packages" && exit 1
}

install_stage_one() {
	[ -d "/home/$server_user" ] && echo 'Server is already installed' && exit 1

	useradd -m -s /usr/bin/bash "$server_user"
	passwd -l "$server_user"

	mkdir -vp /tmp/cs16-server && pushd /tmp/cs16-server || exit 1

	links=(
		https://steamcdn-a.akamaihd.net/client/steamcmd_linux.tar.gz
		https://github.com/Bots-United/metamod-p/releases/download/v1.21p38/metamod_i686_linux_win32-1.21p38.tar.xz
		https://www.amxmodx.org/amxxdrop/1.10/amxmodx-latest-base-linux.tar.gz
		https://www.amxmodx.org/amxxdrop/1.10/amxmodx-latest-cstrike-linux.tar.gz
		https://github.com/yapb/yapb/releases/download/4.4.957/yapb-4.4.957-linux.tar.xz
	)

	for link in "${links[@]}"; do
		echo "==> Downloading $link"
		curl -fLO "$link" || { echo "Failed to download $link"; exit 1; }
	done

	popd || exit 1

	install -vm 755 cs16-server/cs16-server -t /usr/bin
	install -vDm 644 cs16-server/cs16-server.conf -t /etc/hlds
	install -vm 644 cs16-server/cs16-server.1.gz -t /usr/share/man/man1
}

install_stage_two() {
	cd "/home/$server_user" || exit 1
	mkdir -vp .steam && cd .steam || exit 1
	ln -sfv . steam

	for arc in /tmp/cs16-server/*.tar.*; do
		tar xvf "$arc"
	done

	for _i in {1..3}; do
		./steamcmd.sh +force_install_dir cs16 +login anonymous +app_update 90 validate +quit
	done

	mv -vf addons cs16/cstrike

	mkdir -vp cs16/cstrike/addons/metamod/dlls
	mv -vf metamod.so cs16/cstrike/addons/metamod/dlls
	rm -vf metamod.dll

	echo 'linux addons/amxmodx/dlls/amxmodx_mm_i386.so' > cs16/cstrike/addons/metamod/plugins.ini
	echo ';;linux addons/yapb/bin/yapb.so' >> cs16/cstrike/addons/metamod/plugins.ini

	ln -sfv linux32 sdk32
	touch cs16/cstrike/{listip.cfg,banned.cfg}
}

install_service() {
	install -m 644 cs16-server/cs16-server.service -t /usr/lib/systemd/system
	echo -en '\nRun "systemctl enable cs16-server" to start server on boot'
}

case $1 in
	remove)
		remove_server;;
	"")
		check_depends
		install_stage_one
		su "$server_user" -c "$(declare -f install_stage_two); install_stage_two"
		[ -x "$(command -v systemctl)" ] && install_service
		echo -en '\nhlds parameters can be set in /etc/hlds/cs16-server.conf\n'
		echo -en '\nInstallation completed\n\n';;
esac
