#!/bin/bash

set -euo pipefail

if [[ "$(id -u)" -ne 0 ]]; then
    printf "This script must be run as root\n"
    printf "Pass \"remove\" arg to uninstall\n"
    exit 1
fi

export server_user="hlds"
export tmp_dir="/tmp/cs16-server"
export home_dir="/var/${server_user}"

abort_install() {
    pgrep steamcmd &> /dev/null && pkill -SIGINT steamcmd &> /dev/null
    printf "\nInstallation aborted\n"
    exit 1
}

trap abort_install SIGINT

remove_server() {
    if [[ ! -d "${home_dir}" ]]; then
        printf "Server isn't installed\n"
        exit 1
    elif [[ -n "$(pgrep -u "${server_user}")" ]]; then
        printf "%s user has processes running\n" "${server_user}"
        printf "Stop them before uninstalling the server\n"
        exit 1
    fi

    userdel -r "${server_user}" &> /dev/null

    rm -vrf /etc/hlds
    rm -vf /usr/bin/cs16-server
    rm -vf /usr/share/man/man1/cs16-server.1.gz

    [[ -x "$(command -v systemctl)" ]] && rm -vf /usr/lib/systemd/system/cs16-server.service
}

check_depends() {
    if ! grep -q 'libstdc++.so.6 (libc6)' < <(ldconfig -p); then
        printf "Install 32-bit libstdc++\n"
        printf "See README.md for details\n"
        exit 1
    fi

    pkgs=("tar" "xz" "gzip" "curl")
    missing_pkgs=""

    for pkg in "${pkgs[@]}"; do
        [[ -x "$(command -v "${pkg}")" ]] || missing_pkgs="${missing_pkgs} ${pkg}"
    done

    if [[ -x "$(command -v sestatus)" ]] && [[ ! -x "$(command -v semanage)" ]]; then
        missing_pkgs="${missing_pkgs} policycoreutils-python-utils"
    fi

    if [[ -n "${missing_pkgs}" ]]; then
        printf "Install the following packages:%s\n" "${missing_pkgs}"
        exit 1
    fi
}

install_stage_one() {
    if [[ -d "${home_dir}" ]]; then
        printf "Server is already installed\n"
        exit 1
    fi

    [[ -d "${tmp_dir}" ]] && rm -vrf "${tmp_dir}"

    mkdir -vp "${tmp_dir}"
    pushd "${tmp_dir}"

    links=(
        "https://steamcdn-a.akamaihd.net/client/steamcmd_linux.tar.gz"
        "https://github.com/Bots-United/metamod-p/releases/download/v1.21p38/metamod_i686_linux_win32-1.21p38.tar.xz"
        "https://www.amxmodx.org/amxxdrop/1.10/amxmodx-1.10.0-git5468-base-linux.tar.gz"
        "https://www.amxmodx.org/amxxdrop/1.10/amxmodx-1.10.0-git5468-cstrike-linux.tar.gz"
        "https://github.com/yapb/yapb/releases/download/4.4.957/yapb-4.4.957-linux.tar.xz"
    )

    for link in "${links[@]}"; do
        printf "==> Downloading %s\n" "${link}"
        if ! curl -fLO "${link}"; then
            printf "Failed to download %s\n" "${link}"
            exit 1
        fi
    done

    popd

    mkdir -v "${home_dir}"
    chmod -v 700 "${home_dir}"
    useradd -r -M -s "$(command -v nologin)" -d "${home_dir}" -c "Counter-Strike 1.6 Dedicated Server" "${server_user}"
    chown -v "${server_user}":"${server_user}" "${home_dir}"
}

install_stage_two() {
    mkdir -v "${home_dir}/.steam"
    cd "${home_dir}/.steam"
    ln -sfv . steam

    for arc in "${tmp_dir}/"*.tar.*; do
        tar xvf "${arc}"
    done

    # Needs to run a few times to download and validate everything
    for _i in {1..3}; do
        ./steamcmd.sh +force_install_dir "${home_dir}/cs16" +login anonymous +app_update 90 validate +quit
    done

    # Temporary fix for 4.4.957
    chmod -v 755 addons/yapb/data/*

    mv -vf addons ../cs16/cstrike

    mkdir -vp ../cs16/cstrike/addons/metamod/dlls
    mv -vf metamod.so ../cs16/cstrike/addons/metamod/dlls
    # Remove part for Windows
    rm -vf metamod.dll

    # amxmodx: on
    # yapb bots: off
    printf "linux addons/amxmodx/dlls/amxmodx_mm_i386.so\n" > ../cs16/cstrike/addons/metamod/plugins.ini
    printf ";;linux addons/yapb/bin/yapb.so\n" >> ../cs16/cstrike/addons/metamod/plugins.ini

    ln -sfv linux32 sdk32
    # Create empty files so hlds_run won't complain
    touch ../cs16/cstrike/{listip.cfg,banned.cfg}
}

install_stage_three(){
    rm -vrf "${tmp_dir}"

    install -vm 755 cs16-server/cs16-server -t /usr/bin
    install -vDm 644 cs16-server/cs16-server.conf -t /etc/hlds
    install -vm 644 cs16-server/cs16-server.1 -t /usr/share/man/man1
    gzip -vf /usr/share/man/man1/cs16-server.1

    if [[ -x "$(command -v semanage)" ]]; then
        semanage fcontext -a -t bin_t "${home_dir}/cs16/hlds_run"
        restorecon -v "${home_dir}/cs16/hlds_run"
    fi

    if [[ -x "$(command -v systemctl)" ]]; then
        install -m 644 cs16-server/cs16-server.service -t /usr/lib/systemd/system
        printf "\nRun \"systemctl enable cs16-server\" to start server on boot"
    fi
}

case "${1:-}" in
    "remove")
        remove_server
        ;;
    "")
        check_depends

        install_stage_one
        runuser -u "${server_user}" -- bash -c "$(declare -f install_stage_two) && install_stage_two"
        install_stage_three

        printf "\nhlds parameters can be set in /etc/hlds/cs16-server.conf\n"
        printf "\nInstallation completed\n\n"
        ;;
esac
